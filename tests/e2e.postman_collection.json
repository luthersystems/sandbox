{
	"info": {
		"_postman_id": "3230fe36-4a5b-4091-a707-cc60ef2331e6",
		"name": "MartinTestSuite-AUTOGENERATED",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"event": [
				{
					"id": "91a1f923-801f-4d83-8913-86f8b6d04707",
					"listen": "test",
					"script": {
						"exec": [
							"// AUTO-GENERATED. DO NOT MODIFY!",
							"(function() {",
							"    \"use strict\";",
							"    ",
							"    var id = pm.response.headers ? pm.response.headers.get(\"X-Request-ID\") : undefined;",
							"    console.log(\"X-Request-ID: \" + id);",
							"    ",
							"})();",
							""
						],
						"id": "837e2f06-df39-40b1-aa01-1993e86f80a6",
						"type": "text/javascript"
					}
				}
			],
			"item": [
				{
					"event": [
						{
							"id": "ecd1b82a-86cb-44d3-bb48-91e57fbef4d1",
							"listen": "prerequest",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    const uuidv4 = require('uuid');",
									"    pm.environment.set(\"ACCT1\", \"abc-\" + uuidv4());",
									"    ",
									"})();",
									""
								],
								"id": "3d35ec35-dd63-4b18-84f2-aff947010de8",
								"type": "text/javascript"
							}
						},
						{
							"id": "57eb4f64-3337-4343-8968-792513e94580",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"exception\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "203c0f0b-edb0-4e49-bd35-b50393b4fb51",
								"type": "text/javascript"
							}
						}
					],
					"id": "918d92c9-b46b-401c-91ce-7bb905a7a4a0",
					"name": "Create Account 1",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"{{ACCT1}}\",\n  \"balance\": 100\n}\n"
						},
						"header": [
							{
								"id": "8d5af230-3cb4-44d9-b31b-d3cdc310d2c1",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"accounts"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/accounts"
						}
					}
				},
				{
					"event": [
						{
							"id": "ee16be66-edc7-4747-a2b2-20a667f869ef",
							"listen": "prerequest",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    const uuidv4 = require('uuid');",
									"    pm.environment.set(\"ACCT2\", \"xyz-\" + uuidv4());",
									"    ",
									"})();",
									""
								],
								"id": "83ec3fda-9b91-4b8f-8d8a-af80fbd86dff",
								"type": "text/javascript"
							}
						},
						{
							"id": "f9f3f792-a223-4892-9e40-f308a18b8950",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"exception\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "d4b32466-7a9b-468d-8c5a-00d26c4e0c59",
								"type": "text/javascript"
							}
						}
					],
					"id": "98009d8c-18c9-43d5-85c4-ea119514dbab",
					"name": "Create Account 2",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"{{ACCT2}}\",\n  \"balance\": 100\n}\n"
						},
						"header": [
							{
								"id": "4b58b638-746c-4aec-b85c-6f92a1027d8a",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"accounts"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/accounts"
						}
					}
				},
				{
					"event": [
						{
							"id": "9131398d-7e22-42f2-b0a7-95ec4c036ca6",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"exception\");",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "c40ad8e7-4e5d-4d64-8c56-05b2c866a881",
								"type": "text/javascript"
							}
						}
					],
					"id": "b9012651-6ed8-4ff9-9a7e-edf9405640a0",
					"name": "Transfer",
					"request": {
						"body": {
							"formdata": null,
							"mode": "raw",
							"raw": "{\n  \"payer_id\": \"{{ACCT1}}\",\n  \"payee_id\": \"{{ACCT2}}\",\n  \"transfer_amount\": 20\n}\n"
						},
						"header": [
							{
								"id": "3aa84310-beeb-46ea-9881-1fe60528268b",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "POST",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"transfer"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/transfer"
						}
					}
				},
				{
					"event": [
						{
							"id": "e7293665-2743-4670-9bda-9c0e1c3a5bdd",
							"listen": "test",
							"script": {
								"exec": [
									"// AUTO-GENERATED. DO NOT MODIFY!",
									"(function() {",
									"    \"use strict\";",
									"    pm.test(\"ok\", () =\u003e {",
									"        let data = pm.response.json();",
									"        console.log(data);",
									"        pm.response.to.have.status(200);",
									"        pm.expect(data).to.not.have.property(\"exception\");",
									"        pm.expect(data).to.have.property(\"account\");",
									"        pm.expect(data.account.account_id).to.equal(pm.environment.get(\"ACCT2\"));",
									"        // int64 protobuf fields come out as strings in javascript",
									"        pm.expect(data.account.balance).to.equal('120');",
									"    });",
									"    ",
									"})();",
									""
								],
								"id": "9a092f49-5733-48e1-83a5-3daa4dc5ec3f",
								"type": "text/javascript"
							}
						}
					],
					"id": "13e6421b-16db-4219-a67e-d1ed990dcd0a",
					"name": "Get Account: 2",
					"request": {
						"header": [
							{
								"id": "0c2d69b3-c000-4f10-b4a5-1f9407f821fa",
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"method": "GET",
						"url": {
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"v1",
								"account",
								"{{ACCT2}}"
							],
							"protocol": "{{SCHEME}}",
							"raw": "{{SCHEME}}://{{SERVER}}/v1/account/{{ACCT2}}"
						}
					}
				}
			],
			"name": "Sandbox Example:  Managing Account Balances"
		}
	]
}