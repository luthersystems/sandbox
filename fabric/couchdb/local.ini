; CouchDB Configuration Settings

; Custom settings should be made in this file. They will override settings
; in default.ini, but unlike changes made to default.ini, this file won't be
; overwritten on server upgrade.
;
; This CouchDB configuration is modified from the one included in the
; fabric-couch:x86_64-v1.0.0 docker image and it should be mounted over the
; included config to simplify things and avoid dealing with file precedence.


[chttpd]
bind_address = 0.0.0.0


[couchdb]
; Specify the location of the database in container.
; Optionally, these directories can be mounted in the host via docker.
database_dir = /opt/couchdb/data/
view_index_dir = /opt/couchdb/data/
uri_file = /opt/couchdb/data/couch.uri

; Specify the number of database shards that can be open concurrently.
; CouchDB uses LRU cache to manage open databases, and closes databases
; as needed. Deployments with large numbers of channels and high
; concurrency may need to increase this setting.
max_dbs_open = 8000

; only allow the admin user to connect
; Uncomment the following statement to enable admin user security.
; default_security = admin_only

; allow delayed commits since peer manages savepoints and flushing to disk
delayed_commits = true

; uuid is a unique identifier for this couchdb instance
uuid = e6b4092dbd1fe0388fc21ca64e979010


[cluster]
; peer maintains a single replica
n = 1

; adjust q to set the level of parallelism locally
; recommended to have no more than 10 million documents/shard (q)
; for 100 million documents, q=10 -- at a minimum
q = 8


[log]
writer = file
file = /opt/couchdb/logs/couchdb.log
level = info

; Uncomment the following two statements to enable admin user security.
; [httpd]
; www-authenticate = Basic realm="administrator"


[couch_httpd_auth]
; Uncomment the following statement to enable admin user security.
; require_valid_user = true
iterations = 10000 ; iterations for password hashing
min_iterations = 10000
max_iterations = 1000000

; Secret used for proxy authentication and cookie-based authentication and
; should be different in every environment.
secret = 853dffb578a9543c5f6abd457c4510a2


; The couchdb instance will be seeded with the following admin users.  Create a
; new admin hash by creating the admin in a a temporary couchdb instance with
; the appropriate [couch_httpd_auth]iterations setting and using the HTTP
; interface to retrieve the hash value.
;
;       curl localhost:5984/_node/nonode@nohost/_config/admins/newadmin -X PUT -d '"newpassword"'
;       curl -u newadmin:newpassword localhost:5984/_node/nonode@nohost/_config/admins/admin
[admins]
; peer = peerpassword
peer = -pbkdf2-873c04371cd69e94541bcefcb2c1225c5dbc20a7,3f5da713a8a69162d842fed84a45d4dd,10000

; admin = adminpassword
admin = -pbkdf2-37b5fdbe890b5612ab465b17949b0d5ee457050b,3dfebeead3ec481ac372e438bb917f29,100000


[attachments]
compressible_types = text/*, application/javascript, application/json, application/xml, application/octet-stream
