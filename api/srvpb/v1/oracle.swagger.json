{
  "swagger": "2.0",
  "info": {
    "title": "Sandbox API",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "SandboxService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/accounts/{account.accountId}": {
      "post": {
        "operationId": "SandboxService_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountResponse"
            }
          },
          "400": {
            "description": "Bad request determined by business logic",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "401": {
            "description": "Authorization failed",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "403": {
            "description": "Permission denied",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "404": {
            "description": "Missing resource",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Unexpected internal server error",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "503": {
            "description": "Service not available",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account.accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Account"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/accounts/{accountId}": {
      "get": {
        "operationId": "SandboxService_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountResponse"
            }
          },
          "400": {
            "description": "Bad request determined by business logic",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "401": {
            "description": "Authorization failed",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "403": {
            "description": "Permission denied",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "404": {
            "description": "Missing resource",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Unexpected internal server error",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "503": {
            "description": "Service not available",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/health_check": {
      "get": {
        "summary": "Check the health of the scaffold processor. This is used by load balancers to check end-to-end service health.",
        "operationId": "SandboxService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthCheckResponse"
            }
          },
          "400": {
            "description": "Bad request determined by business logic",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "401": {
            "description": "Authorization failed",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "403": {
            "description": "Permission denied",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "404": {
            "description": "Missing resource",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Unexpected internal server error",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "503": {
            "description": "Service not available",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "oracleOnly",
            "description": "Skip the chaincode healthcheck.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/transfer": {
      "post": {
        "operationId": "SandboxService_Transfer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TransferResponse"
            }
          },
          "400": {
            "description": "Bad request determined by business logic",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "401": {
            "description": "Authorization failed",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "403": {
            "description": "Permission denied",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "404": {
            "description": "Missing resource",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Unexpected internal server error",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "503": {
            "description": "Service not available",
            "schema": {
              "$ref": "#/definitions/commonExceptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TransferRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    }
  },
  "definitions": {
    "commonException": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID for exception."
        },
        "type": {
          "$ref": "#/definitions/commonExceptionType",
          "description": "Type of exception."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp for when the exception occurred (RFC3339)."
        },
        "description": {
          "type": "string",
          "description": "Human readable description of exception."
        },
        "exceptionMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata about the exception."
        }
      },
      "description": "General message for exceptions."
    },
    "commonExceptionResponse": {
      "type": "object",
      "properties": {
        "exception": {
          "$ref": "#/definitions/commonException",
          "description": "An exception if an error occurred during processing request."
        }
      },
      "description": "Exception messages."
    },
    "commonExceptionType": {
      "type": "string",
      "enum": [
        "INVALID_TYPE",
        "BUSINESS",
        "SERVICE_NOT_AVAILABLE",
        "INFRASTRUCTURE",
        "UNEXPECTED",
        "SECURITY_VIOLATION"
      ],
      "default": "INVALID_TYPE",
      "description": "Type of exception.\n\n - INVALID_TYPE: Default for no exception.\n - BUSINESS: Business logic error.\n - SERVICE_NOT_AVAILABLE: A service was unavailable.\n - INFRASTRUCTURE: Infrastructure was down.\n - UNEXPECTED: Catch-all for all other types.\n - SECURITY_VIOLATION: Security related error."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Account": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "currentBalance": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CreateAccountResponse": {
      "type": "object",
      "properties": {
        "exception": {
          "$ref": "#/definitions/commonException"
        }
      }
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "exception": {
          "$ref": "#/definitions/commonException"
        },
        "account": {
          "$ref": "#/definitions/v1Account"
        }
      }
    },
    "v1HealthCheckReport": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the report was generated (RFC3339)."
        },
        "status": {
          "type": "string",
          "description": "Status of the service."
        },
        "serviceName": {
          "type": "string",
          "description": "Name of the service."
        },
        "serviceVersion": {
          "type": "string",
          "description": "Version of the service."
        }
      },
      "description": "Health check status of an individual service."
    },
    "v1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1HealthCheckReport"
          },
          "description": "The status of the relevant sub services."
        },
        "exception": {
          "$ref": "#/definitions/commonException",
          "description": "An exception if an error occurred during processing request."
        }
      },
      "description": "Health status of services."
    },
    "v1TransferRequest": {
      "type": "object",
      "properties": {
        "payerId": {
          "type": "string"
        },
        "payeeId": {
          "type": "string"
        },
        "transferAmount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1TransferResponse": {
      "type": "object",
      "properties": {
        "exception": {
          "$ref": "#/definitions/commonException"
        }
      }
    }
  },
  "securityDefinitions": {
    "X-API-KEY": {
      "type": "apiKey",
      "name": "X-API-KEY",
      "in": "header"
    }
  }
}
